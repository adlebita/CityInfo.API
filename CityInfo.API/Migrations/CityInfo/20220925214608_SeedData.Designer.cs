// <auto-generated />

using CityInfo.API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace CityInfo.API.Migrations.CityInfo
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20220925214608_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityInfo.API.Models.Entity.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c9b6082-c6fc-4e0f-99d6-904b880bba33"),
                            Description = "Big apple",
                            Name = "New York"
                        },
                        new
                        {
                            Id = new Guid("fc1c76c4-3e26-4e90-9a07-35d42c9c2d74"),
                            Description = "Mega city",
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = new Guid("03a051ac-484b-47c2-bdac-af461f4122ff"),
                            Description = "Alternative life",
                            Name = "Wellington"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Models.Entity.PointOfInterest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf46b096-2d63-483d-9b26-c0d4223f4503"),
                            CityId = new Guid("8c9b6082-c6fc-4e0f-99d6-904b880bba33"),
                            Description = "Green statue!",
                            Name = "Statue of Liberty"
                        },
                        new
                        {
                            Id = new Guid("c2e184ed-c109-4db2-a63a-d6a6fb10ad3a"),
                            CityId = new Guid("fc1c76c4-3e26-4e90-9a07-35d42c9c2d74"),
                            Description = "Very tall!",
                            Name = "Tokyo Sky Tree"
                        },
                        new
                        {
                            Id = new Guid("dbae16b3-3a18-4173-a195-f6b55b89ce74"),
                            CityId = new Guid("fc1c76c4-3e26-4e90-9a07-35d42c9c2d74"),
                            Description = "So many people!",
                            Name = "Shibuya Crossing"
                        },
                        new
                        {
                            Id = new Guid("3a0f253e-8939-412f-980e-04269e351f18"),
                            CityId = new Guid("03a051ac-484b-47c2-bdac-af461f4122ff"),
                            Description = "Super windy!",
                            Name = "Brooklyn Windmill"
                        });
                });

            modelBuilder.Entity("CityInfo.API.Models.Entity.PointOfInterest", b =>
                {
                    b.HasOne("CityInfo.API.Models.Entity.City", null)
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CityInfo.API.Models.Entity.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
